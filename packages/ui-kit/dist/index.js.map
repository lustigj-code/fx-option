{"version":3,"sources":["../src/components/Badge.tsx","../src/lib/utils.ts","../src/components/Button.tsx","../src/components/Card.tsx","../src/components/Form.tsx","../src/components/Hero.tsx","../src/components/KPIBar.tsx","../src/components/Navbar.tsx","../src/components/Stat.tsx","../src/components/Table.tsx","../src/components/TestimonialStrip.tsx","../src/components/Toast.tsx","../src/components/auth/LoginForm.tsx","../src/components/auth/AccessDeniedBanner.tsx","../src/components/auth/MfaPrompt.tsx","../src/styles.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '../lib/utils';\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement> {\n  tone?: 'accent' | 'muted';\n}\n\nexport const Badge = React.forwardRef<HTMLSpanElement, BadgeProps>(\n  ({ className, tone = 'accent', ...props }, ref) => {\n    const tones = {\n      accent: 'bg-accent/15 text-accent border border-accent/40',\n      muted: 'bg-accent-muted/40 text-text border border-accent-muted/60'\n    };\n\n    return (\n      <span\n        ref={ref}\n        className={cn(\n          'inline-flex items-center rounded-full px-4 py-1 text-xs font-medium uppercase tracking-wide backdrop-blur-sm',\n          tones[tone],\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n);\n\nBadge.displayName = 'Badge';\n","import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '../lib/utils';\n\ntype ButtonVariant = VariantProps<typeof buttonVariants>;\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 rounded-2xl border border-transparent px-5 py-3 text-sm font-semibold transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:pointer-events-none disabled:opacity-60',\n  {\n    variants: {\n      variant: {\n        primary:\n          'bg-accent text-background shadow-soft hover:shadow-glow hover:-translate-y-0.5',\n        secondary:\n          'bg-card text-text border border-accent-muted/40 hover:border-accent hover:-translate-y-0.5',\n        ghost:\n          'bg-transparent text-muted hover:text-text hover:bg-accent-muted/30 hover:-translate-y-0.5',\n        danger:\n          'bg-danger text-background shadow-[0_20px_45px_-25px_rgba(255,77,77,0.35)] hover:shadow-[0_0_25px_0_rgba(255,77,77,0.55)] hover:-translate-y-0.5'\n      },\n      size: {\n        sm: 'px-4 py-2 text-xs',\n        md: 'px-5 py-3 text-sm',\n        lg: 'px-6 py-3.5 text-base'\n      }\n    },\n    defaultVariants: {\n      variant: 'primary',\n      size: 'md'\n    }\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    ButtonVariant {\n  asChild?: boolean;\n}\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size }), className)}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nButton.displayName = 'Button';\n\nexport { buttonVariants };\n","import * as React from 'react';\n\nimport { cn } from '../lib/utils';\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  header?: React.ReactNode;\n  footer?: React.ReactNode;\n}\n\nexport const Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, header, footer, children, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'glass-card flex flex-col gap-4 rounded-2xl p-6 shadow-soft backdrop-blur-xl',\n        className\n      )}\n      {...props}\n    >\n      {header && <div className=\"text-sm font-medium text-muted\">{header}</div>}\n      <div className=\"flex-1 text-base text-text\">{children}</div>\n      {footer && <div className=\"pt-2 text-xs text-muted\">{footer}</div>}\n    </div>\n  )\n);\n\nCard.displayName = 'Card';\n","import * as React from 'react';\n\nimport { Button } from './Button';\nimport { cn } from '../lib/utils';\n\nexport interface FormField {\n  label: string;\n  name: string;\n  placeholder?: string;\n  type?: string;\n  helperText?: string;\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  title?: string;\n  description?: string;\n  fields: FormField[];\n  submitLabel?: string;\n}\n\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    { className, title, description, fields, submitLabel = 'Submit', children, ...props },\n    ref\n  ) => (\n    <form\n      ref={ref}\n      className={cn(\n        'space-y-6 rounded-2xl border border-accent-muted/30 bg-card/70 p-6 shadow-soft backdrop-blur-xl',\n        className\n      )}\n      {...props}\n    >\n      {(title || description) && (\n        <div className=\"space-y-2\">\n          {title && <h3 className=\"text-xl font-semibold text-text\">{title}</h3>}\n          {description && <p className=\"text-sm text-muted\">{description}</p>}\n        </div>\n      )}\n      <div className=\"space-y-4\">\n        {fields.map((field) => (\n          <div key={field.name} className=\"flex flex-col gap-2\">\n            <label htmlFor={field.name} className=\"text-xs uppercase tracking-wide text-muted\">\n              {field.label}\n            </label>\n            <input\n              id={field.name}\n              name={field.name}\n              type={field.type ?? 'text'}\n              placeholder={field.placeholder}\n              className=\"rounded-2xl border border-accent-muted/40 bg-background/80 px-4 py-3 text-sm text-text shadow-inner focus:border-accent focus:outline-none focus:ring-2 focus:ring-accent/50\"\n            />\n            {field.helperText && <span className=\"text-xs text-muted\">{field.helperText}</span>}\n          </div>\n        ))}\n      </div>\n      <div className=\"flex items-center justify-between gap-3\">\n        {children}\n        <Button type=\"submit\" className=\"ml-auto\">\n          {submitLabel}\n        </Button>\n      </div>\n    </form>\n  )\n);\n\nForm.displayName = 'Form';\n","import * as React from 'react';\n\nimport { Badge } from './Badge';\nimport { Button } from './Button';\nimport { cn } from '../lib/utils';\n\nexport interface HeroProps extends React.HTMLAttributes<HTMLDivElement> {\n  headline: string;\n  subheadline: string;\n  badges?: string[];\n  primaryCta?: { label: string; onClick?: () => void };\n  secondaryCta?: { label: string; onClick?: () => void };\n  media?: React.ReactNode;\n}\n\nexport const Hero = React.forwardRef<HTMLDivElement, HeroProps>(\n  (\n    {\n      className,\n      headline,\n      subheadline,\n      badges = [],\n      primaryCta,\n      secondaryCta,\n      media,\n      ...props\n    },\n    ref\n  ) => (\n    <section\n      ref={ref}\n      className={cn(\n        'relative overflow-hidden rounded-2xl border border-accent-muted/30 bg-background px-8 py-12 shadow-soft',\n        \"bg-radial-emerald before:pointer-events-none before:absolute before:inset-0 before:bg-noise-overlay before:opacity-60 before:content-['']\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"relative z-10 flex flex-col gap-8 md:flex-row md:items-center\">\n        <div className=\"flex-1 space-y-6\">\n          <div className=\"flex flex-wrap gap-3\">\n            {badges.map((badge) => (\n              <Badge key={badge} tone=\"accent\">\n                {badge}\n              </Badge>\n            ))}\n          </div>\n          <h1 className=\"text-4xl font-bold tracking-tight text-text md:text-5xl\">{headline}</h1>\n          <p className=\"max-w-xl text-base text-muted md:text-lg\">{subheadline}</p>\n          <div className=\"flex flex-wrap gap-4\">\n            {primaryCta && <Button onClick={primaryCta.onClick}>{primaryCta.label}</Button>}\n            {secondaryCta && (\n              <Button variant=\"ghost\" onClick={secondaryCta.onClick}>\n                {secondaryCta.label}\n              </Button>\n            )}\n          </div>\n        </div>\n        {media && <div className=\"flex-1\">{media}</div>}\n      </div>\n    </section>\n  )\n);\n\nHero.displayName = 'Hero';\n","import * as React from 'react';\n\nimport { cn } from '../lib/utils';\n\nexport interface KPIBarProps extends React.HTMLAttributes<HTMLDivElement> {\n  label: string;\n  value: number;\n  target?: number;\n}\n\nexport const KPIBar = React.forwardRef<HTMLDivElement, KPIBarProps>(\n  ({ className, label, value, target = 100, ...props }, ref) => {\n    const percentage = Math.min(100, Math.round((value / target) * 100));\n\n    return (\n      <div ref={ref} className={cn('flex flex-col gap-2', className)} {...props}>\n        <div className=\"flex items-center justify-between text-xs uppercase tracking-wide text-muted\">\n          <span>{label}</span>\n          <span className=\"text-text\">{percentage}%</span>\n        </div>\n        <div className=\"h-3 rounded-full bg-accent-muted/40\">\n          <div\n            className=\"h-full rounded-full bg-gradient-to-r from-accent to-accent/80 shadow-glow\"\n            style={{ width: `${percentage}%` }}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nKPIBar.displayName = 'KPIBar';\n","import * as React from 'react';\n\nimport { Button } from './Button';\nimport { cn } from '../lib/utils';\n\nexport interface NavbarLink {\n  label: string;\n  href: string;\n}\n\nexport interface NavbarProps extends React.HTMLAttributes<HTMLElement> {\n  logo: React.ReactNode;\n  links?: NavbarLink[];\n  ctaLabel?: string;\n  onCtaClick?: () => void;\n}\n\nexport const Navbar = React.forwardRef<HTMLElement, NavbarProps>(\n  ({ className, logo, links = [], ctaLabel = 'Get started', onCtaClick, ...props }, ref) => (\n    <nav\n      ref={ref}\n      className={cn(\n        'flex items-center justify-between rounded-2xl border border-accent-muted/30 bg-card/80 px-6 py-4 shadow-soft backdrop-blur-xl',\n        className\n      )}\n      {...props}\n    >\n      <div className=\"flex items-center gap-3 text-sm font-semibold text-text\">{logo}</div>\n      <div className=\"hidden items-center gap-6 text-sm text-muted md:flex\">\n        {links.map((link) => (\n          <a key={link.href} href={link.href} className=\"transition hover:text-text\">\n            {link.label}\n          </a>\n        ))}\n      </div>\n      <div className=\"flex items-center gap-2\">\n        <Button variant=\"secondary\" size=\"sm\" onClick={onCtaClick}>\n          {ctaLabel}\n        </Button>\n      </div>\n    </nav>\n  )\n);\n\nNavbar.displayName = 'Navbar';\n","import * as React from 'react';\n\nimport { cn } from '../lib/utils';\n\nexport interface StatProps extends React.HTMLAttributes<HTMLDivElement> {\n  label: string;\n  value: string | number;\n  trend?: {\n    direction: 'up' | 'down';\n    value: string;\n  };\n}\n\nexport const Stat = React.forwardRef<HTMLDivElement, StatProps>(\n  ({ className, label, value, trend, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'flex flex-col gap-1 rounded-2xl border border-accent-muted/30 bg-card/60 px-4 py-3 text-left shadow-soft',\n        className\n      )}\n      {...props}\n    >\n      <span className=\"text-xs uppercase tracking-wide text-muted\">{label}</span>\n      <span className=\"text-2xl font-semibold text-text\">{value}</span>\n      {trend && (\n        <span\n          className={cn(\n            'flex items-center gap-1 text-xs font-medium',\n            trend.direction === 'up' ? 'text-accent' : 'text-danger'\n          )}\n        >\n          <span>\n            {trend.direction === 'up' ? '▲' : '▼'} {trend.value}\n          </span>\n        </span>\n      )}\n    </div>\n  )\n);\n\nStat.displayName = 'Stat';\n","import * as React from 'react';\n\nimport { cn } from '../lib/utils';\n\nexport interface TableColumn<T> {\n  key: keyof T;\n  header: string;\n  render?: (value: T[keyof T], row: T) => React.ReactNode;\n}\n\nexport interface TableProps<T> extends React.TableHTMLAttributes<HTMLTableElement> {\n  columns: TableColumn<T>[];\n  data: T[];\n}\n\nexport function Table<T>({ className, columns, data, ...props }: TableProps<T>) {\n  return (\n    <div className={cn('overflow-hidden rounded-2xl border border-accent-muted/30 bg-card/80 shadow-soft', className)}>\n      <table className=\"min-w-full divide-y divide-accent-muted/30\" {...props}>\n        <thead className=\"bg-card/60 text-left text-xs uppercase tracking-wide text-muted\">\n          <tr>\n            {columns.map((column) => (\n              <th key={String(column.key)} className=\"px-4 py-3\">\n                {column.header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody className=\"divide-y divide-accent-muted/10 text-sm text-text\">\n          {data.map((row, index) => (\n            <tr key={index} className=\"hover:bg-accent-muted/10\">\n              {columns.map((column) => (\n                <td key={String(column.key)} className=\"px-4 py-3 text-muted\">\n                  {column.render ? column.render(row[column.key], row) : (row[column.key] as React.ReactNode)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import * as React from 'react';\n\nimport { cn } from '../lib/utils';\n\nexport interface Testimonial {\n  quote: string;\n  author: string;\n  role?: string;\n}\n\nexport interface TestimonialStripProps extends React.HTMLAttributes<HTMLDivElement> {\n  testimonials: Testimonial[];\n  heading?: string;\n}\n\nexport const TestimonialStrip = React.forwardRef<HTMLDivElement, TestimonialStripProps>(\n  ({ className, testimonials, heading = 'Loved by industry leaders', ...props }, ref) => (\n    <section ref={ref} className={cn('space-y-6', className)} {...props}>\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-lg font-semibold text-text\">{heading}</h2>\n        <div className=\"h-px flex-1 bg-accent-muted/40 ml-6\" />\n      </div>\n      <div className=\"grid gap-4 md:grid-cols-3\">\n        {testimonials.map((testimonial) => (\n          <div\n            key={testimonial.quote}\n            className=\"glass-card rounded-2xl border border-accent-muted/30 p-4 text-sm text-muted shadow-soft\"\n          >\n            <p className=\"text-base text-text\">“{testimonial.quote}”</p>\n            <div className=\"mt-4 text-xs uppercase tracking-wide text-muted\">\n              <span className=\"text-text\">{testimonial.author}</span>\n              {testimonial.role && <span className=\"text-muted\"> · {testimonial.role}</span>}\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  )\n);\n\nTestimonialStrip.displayName = 'TestimonialStrip';\n","import * as React from 'react';\n\nimport { cn } from '../lib/utils';\n\nexport interface ToastProps extends React.HTMLAttributes<HTMLDivElement> {\n  title: string;\n  description?: string;\n  status?: 'default' | 'success' | 'danger';\n  action?: React.ReactNode;\n}\n\nexport const Toast = React.forwardRef<HTMLDivElement, ToastProps>(\n  ({ className, title, description, status = 'default', action, ...props }, ref) => {\n    const tone = {\n      default: 'border-accent-muted/40 bg-card/80 text-text',\n      success: 'border-accent/40 bg-accent-muted/30 text-accent',\n      danger: 'border-danger/40 bg-danger/15 text-danger'\n    }[status];\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'flex items-start gap-4 rounded-2xl border px-5 py-4 shadow-soft backdrop-blur-xl',\n          tone,\n          className\n        )}\n        role=\"status\"\n        {...props}\n      >\n        <div className=\"flex-1 space-y-1\">\n          <p className=\"text-sm font-semibold\">{title}</p>\n          {description && <p className=\"text-xs text-muted\">{description}</p>}\n        </div>\n        {action}\n      </div>\n    );\n  }\n);\n\nToast.displayName = 'Toast';\n","'use client';\n\nimport { FormEvent, useState } from 'react';\n\nimport { cn } from '../../lib/utils';\nimport { Button } from '../Button';\n\nexport interface LoginFormValues {\n  email: string;\n  password: string;\n  rememberDevice: boolean;\n}\n\nexport interface LoginFormProps\n  extends Omit<React.FormHTMLAttributes<HTMLFormElement>, 'onSubmit'> {\n  /** Callback invoked with the captured credentials. */\n  onSubmit: (values: LoginFormValues) => Promise<void> | void;\n  /** Initial email value, useful when pre-filling from query params. */\n  initialEmail?: string;\n  /** Displayed above the form controls. */\n  title?: string;\n  /** Additional context message below the title. */\n  subtitle?: string;\n  /** Whether to disable inputs during async submission. */\n  pending?: boolean;\n  /** Inline error surfaced beneath the password field. */\n  error?: string | null;\n  /** Optional mailto link rendered for support escalations. */\n  supportEmail?: string;\n  /** Custom label for the remember device checkbox. */\n  rememberDeviceLabel?: string;\n  /** Custom label for the submit button. */\n  submitLabel?: string;\n}\n\nconst defaultTitle = 'Sign in to continue';\nconst defaultSubtitle =\n  'Access is restricted to authorised FX Portal users. Credentials rotate every 90 days.';\nconst defaultRememberDeviceLabel = 'Remember device for 30 days';\nconst defaultSubmitLabel = 'Sign in';\n\nexport function LoginForm({\n  className,\n  onSubmit,\n  initialEmail = '',\n  title = defaultTitle,\n  subtitle = defaultSubtitle,\n  pending = false,\n  error,\n  supportEmail,\n  rememberDeviceLabel = defaultRememberDeviceLabel,\n  submitLabel = defaultSubmitLabel,\n  ...formProps\n}: LoginFormProps) {\n  const [email, setEmail] = useState(initialEmail);\n  const [password, setPassword] = useState('');\n  const [rememberDevice, setRememberDevice] = useState(false);\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (pending) {\n      return;\n    }\n    await onSubmit({\n      email,\n      password,\n      rememberDevice,\n    });\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={cn(\n        'space-y-6 rounded-3xl border border-accent-muted/30 bg-card/80 p-8 shadow-soft backdrop-blur-xl',\n        'transition-shadow duration-200 hover:shadow-accent/20',\n        className\n      )}\n      aria-busy={pending}\n      {...formProps}\n    >\n      <div className=\"space-y-2 text-center\">\n        <h1 className=\"text-2xl font-semibold text-text\">{title}</h1>\n        {subtitle ? <p className=\"text-sm text-muted\">{subtitle}</p> : null}\n      </div>\n      <div className=\"space-y-4\">\n        <div className=\"flex flex-col gap-2 text-left\">\n          <label htmlFor=\"email\" className=\"text-xs font-semibold uppercase tracking-wide text-muted\">\n            Email\n          </label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            className=\"rounded-2xl border border-accent-muted/40 bg-background/90 px-4 py-3 text-sm text-text shadow-inner focus:border-accent focus:outline-none focus:ring-2 focus:ring-accent/50\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n            disabled={pending}\n            required\n          />\n        </div>\n        <div className=\"flex flex-col gap-2 text-left\">\n          <label htmlFor=\"password\" className=\"text-xs font-semibold uppercase tracking-wide text-muted\">\n            Password\n          </label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            className=\"rounded-2xl border border-accent-muted/40 bg-background/90 px-4 py-3 text-sm text-text shadow-inner focus:border-accent focus:outline-none focus:ring-2 focus:ring-accent/50\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n            disabled={pending}\n            required\n          />\n        </div>\n        <label className=\"flex items-center gap-3 text-left text-sm text-muted\">\n          <input\n            id=\"remember-device\"\n            name=\"remember-device\"\n            type=\"checkbox\"\n            className=\"h-4 w-4 rounded border border-accent-muted/40 bg-background/80 text-accent focus:ring-accent/60\"\n            checked={rememberDevice}\n            onChange={(event) => setRememberDevice(event.target.checked)}\n            disabled={pending}\n          />\n          <span>{rememberDeviceLabel}</span>\n        </label>\n      </div>\n      {error ? (\n        <div\n          role=\"alert\"\n          className=\"rounded-2xl border border-rose-500/40 bg-rose-950/60 px-4 py-3 text-sm text-rose-200\"\n        >\n          {error}\n        </div>\n      ) : null}\n      <Button\n        type=\"submit\"\n        className=\"w-full\"\n        disabled={pending}\n      >\n        {pending ? 'Signing in…' : submitLabel}\n      </Button>\n      {supportEmail ? (\n        <p className=\"text-center text-xs text-muted\">\n          Trouble signing in?{' '}\n          <a\n            className=\"font-medium text-accent hover:underline\"\n            href={`mailto:${supportEmail}`}\n          >\n            Contact support\n          </a>\n          .\n        </p>\n      ) : null}\n    </form>\n  );\n}\n\nexport default LoginForm;\n","'use client';\n\nimport { ReactNode } from 'react';\n\nimport { cn } from '../../lib/utils';\nimport { Button } from '../Button';\n\nexport interface AccessDeniedBannerProps {\n  title?: string;\n  description?: ReactNode;\n  actionLabel?: string;\n  onRequestAccess?: () => void;\n  supportEmail?: string;\n  className?: string;\n  children?: ReactNode;\n}\n\nconst defaultTitle = 'Access denied';\nconst defaultDescription = 'You do not have permission to view this resource.';\n\nexport function AccessDeniedBanner({\n  title = defaultTitle,\n  description = defaultDescription,\n  actionLabel = 'Request access',\n  onRequestAccess,\n  supportEmail,\n  className,\n  children,\n}: AccessDeniedBannerProps) {\n  return (\n    <div\n      className={cn(\n        'space-y-4 rounded-3xl border border-amber-400/30 bg-amber-950/40 p-6 text-amber-100 shadow-soft',\n        className\n      )}\n      role=\"status\"\n      aria-live=\"polite\"\n    >\n      <div className=\"space-y-1\">\n        <h2 className=\"text-xl font-semibold text-amber-50\">{title}</h2>\n        {typeof description === 'string' ? (\n          <p className=\"text-sm text-amber-100/90\">{description}</p>\n        ) : (\n          description\n        )}\n      </div>\n      {children}\n      <div className=\"flex flex-wrap items-center gap-3\">\n        {onRequestAccess ? (\n          <Button type=\"button\" variant=\"secondary\" onClick={onRequestAccess}>\n            {actionLabel}\n          </Button>\n        ) : null}\n        {supportEmail ? (\n          <a\n            className=\"text-sm font-medium text-amber-200 underline-offset-4 hover:underline\"\n            href={`mailto:${supportEmail}`}\n          >\n            Contact compliance\n          </a>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default AccessDeniedBanner;\n","'use client';\n\nimport { FormEvent, useState } from 'react';\n\nimport { cn } from '../../lib/utils';\nimport { Button } from '../Button';\n\nexport interface MfaPromptProps\n  extends Omit<React.FormHTMLAttributes<HTMLFormElement>, 'onSubmit'> {\n  onSubmit: (code: string) => Promise<void> | void;\n  pending?: boolean;\n  error?: string | null;\n  supportEmail?: string;\n  onUseRecoveryCode?: () => void;\n  onResendCode?: () => void;\n  title?: string;\n  description?: string;\n}\n\nconst defaultTitle = 'Multi-factor authentication';\nconst defaultDescription = 'Enter the verification code from your authenticator device.';\n\nexport function MfaPrompt({\n  className,\n  onSubmit,\n  pending = false,\n  error,\n  supportEmail,\n  onUseRecoveryCode,\n  onResendCode,\n  title = defaultTitle,\n  description = defaultDescription,\n  ...formProps\n}: MfaPromptProps) {\n  const [code, setCode] = useState('');\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (pending) {\n      return;\n    }\n    await onSubmit(code);\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={cn(\n        'space-y-6 rounded-3xl border border-accent-muted/30 bg-card/80 p-6 shadow-soft backdrop-blur-xl',\n        className\n      )}\n      aria-busy={pending}\n      {...formProps}\n    >\n      <div className=\"space-y-2 text-center\">\n        <h2 className=\"text-xl font-semibold text-text\">{title}</h2>\n        <p className=\"text-sm text-muted\">{description}</p>\n      </div>\n      <div className=\"space-y-2 text-left\">\n        <label htmlFor=\"mfa-code\" className=\"text-xs font-semibold uppercase tracking-wide text-muted\">\n          Verification code\n        </label>\n        <input\n          id=\"mfa-code\"\n          name=\"mfa-code\"\n          inputMode=\"numeric\"\n          autoComplete=\"one-time-code\"\n          className=\"rounded-2xl border border-accent-muted/40 bg-background/90 px-4 py-3 text-sm text-text shadow-inner focus:border-accent focus:outline-none focus:ring-2 focus:ring-accent/50\"\n          value={code}\n          onChange={(event) => setCode(event.target.value.replace(/\\s+/g, ''))}\n          disabled={pending}\n          required\n        />\n      </div>\n      {error ? (\n        <div\n          role=\"alert\"\n          className=\"rounded-2xl border border-rose-500/40 bg-rose-950/60 px-4 py-3 text-sm text-rose-200\"\n        >\n          {error}\n        </div>\n      ) : null}\n      <div className=\"flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between\">\n        <div className=\"flex flex-wrap gap-3\">\n          <Button type=\"submit\" disabled={pending}>\n            {pending ? 'Verifying…' : 'Verify code'}\n          </Button>\n          {onResendCode ? (\n            <Button type=\"button\" variant=\"ghost\" onClick={onResendCode} disabled={pending}>\n              Resend code\n            </Button>\n          ) : null}\n        </div>\n        {onUseRecoveryCode ? (\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            className=\"px-0 text-sm font-semibold text-accent hover:underline\"\n            onClick={onUseRecoveryCode}\n          >\n            Use recovery code\n          </Button>\n        ) : null}\n      </div>\n      {supportEmail ? (\n        <p className=\"text-center text-xs text-muted\">\n          Need help?{' '}\n          <a className=\"font-medium text-accent hover:underline\" href={`mailto:${supportEmail}`}>\n            Contact compliance\n          </a>\n          .\n        </p>\n      ) : null}\n    </form>\n  );\n}\n\nexport default MfaPrompt;\n","import './styles.css';\n\nexport const theme = {\n  colors: {\n    background: '#0b0f0c',\n    card: '#0f1511',\n    accent: '#2df07d',\n    accentMuted: '#1e3f2c',\n    text: '#e8f3ec',\n    muted: '#9db8a6',\n    danger: '#ff4d4d'\n  },\n  radii: {\n    large: '1.5rem'\n  },\n  shadows: {\n    soft: '0 20px 45px -25px rgba(45, 240, 125, 0.35)',\n    glow: '0 0 25px 0 rgba(45, 240, 125, 0.55)'\n  }\n};\n"],"mappings":"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","names":["React","jsx","React","jsx","React","jsx","jsxs","React","jsx","jsxs","React","jsx","jsxs","React","jsx","jsxs","React","jsx","jsxs","jsx","jsxs","React","jsx","jsxs","React","jsx","jsxs","jsx","jsxs","jsx","jsxs","defaultTitle","useState","jsx","jsxs","defaultTitle","defaultDescription","useState"]}